// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TreeSelect renders menu when "showMenu" property is changing 1`] = `
<div
  className="select"
>
  <Container
    className="valueContainer"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="value"
    >
      <Container
        className="label placeholder"
        title="Выберите значение"
      >
        Выберите значение
      </Container>
    </div>
  </Container>
</div>
`;

exports[`TreeSelect renders menu when "showMenu" property is changing 2`] = `
<div
  className="select"
>
  <Container
    className="valueContainer"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="value"
    >
      <Container
        className="label placeholder"
        title="Выберите значение"
      >
        Выберите значение
      </Container>
    </div>
  </Container>
  <OutsideClickDetector
    onClickOutside={[Function]}
  >
    <Container
      className="menu"
    >
      <SearchInput
        className=""
        focusOnMount={true}
        forwardedRef={
          Object {
            "current": null,
          }
        }
        onChange={[Function]}
        value=""
      />
      <Tree
        components={
          Object {
            "IndicatorsContainer": [Function],
            "LabelContainer": [Function],
            "MenuContainer": [Function],
            "Node": [Function],
            "SearchInput": [Function],
            "Tree": [Function],
            "ValueContainer": [Function],
          }
        }
        getNodeLabel={[Function]}
        getNodeValue={[Function]}
        getOptionLabel={[Function]}
        getOptionValue={[Function]}
        isDisabled={[Function]}
        loading={false}
        multiple={false}
        onSelect={[Function]}
        options={
          Object {
            "node0": Object {
              "children": Array [
                "node0$node0",
                "node0$node1",
              ],
              "id": "node0",
              "loading": false,
              "parent": null,
              "uploaded": true,
              "value": Object {
                "label": "node0",
                "value": "node0",
              },
            },
            "node0$node0": Object {
              "children": null,
              "id": "node0$node0",
              "loading": false,
              "parent": "node0",
              "uploaded": true,
              "value": Object {
                "label": "node0",
                "value": "node0",
              },
            },
            "node0$node1": Object {
              "children": null,
              "id": "node0$node1",
              "loading": false,
              "parent": "node0",
              "uploaded": true,
              "value": Object {
                "label": "node1",
                "value": "node1",
              },
            },
            "node1": Object {
              "children": Array [
                "node1$node0",
                "node1$node1",
              ],
              "id": "node1",
              "loading": false,
              "parent": null,
              "uploaded": true,
              "value": Object {
                "label": "node1",
                "value": "node1",
              },
            },
            "node1$node0": Object {
              "children": null,
              "id": "node1$node0",
              "loading": false,
              "parent": "node1",
              "uploaded": true,
              "value": Object {
                "label": "node0",
                "value": "node0",
              },
            },
            "node1$node1": Object {
              "children": null,
              "id": "node1$node1",
              "loading": false,
              "parent": "node1",
              "uploaded": true,
              "value": Object {
                "label": "node1",
                "value": "node1",
              },
            },
          }
        }
        searchValue=""
        showMore={false}
        value={null}
        values={Array []}
      />
    </Container>
  </OutsideClickDetector>
</div>
`;

exports[`TreeSelect renders when "removable" property is set to "true" 1`] = `
<div
  className="select"
>
  <Container
    className="valueContainer"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="value"
    >
      <Container
        className="label"
        title=""
      />
      <Container
        className="indicators"
        onClick={[Function]}
      >
        <IconButton
          active={false}
          className=""
          icon="REMOVE"
          onClick={[Function]}
          round={true}
          tip=""
          variant="INFO"
        />
      </Container>
    </div>
  </Container>
</div>
`;

exports[`TreeSelect renders when no options provided 1`] = `
<div
  className="select"
>
  <Container
    className="valueContainer"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="value"
    >
      <Container
        className="label placeholder"
        title="Выберите значение"
      >
        Выберите значение
      </Container>
    </div>
  </Container>
</div>
`;
