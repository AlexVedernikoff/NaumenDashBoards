// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AttributeCreatingModal SourceControl renders when property "value" is not set to "null" 1`] = `
<SourceControl
  index={0}
  name="name"
  onClick={[Function]}
  onFetch={[Function]}
  onSelect={[Function]}
  options={Object {}}
  value={
    Object {
      "aggregation": "COUNT_CNT",
      "attribute": Object {
        "code": "code",
        "title": "attribute",
      },
      "dataKey": "dataKey",
      "source": Object {
        "label": "source",
        "value": "classFqn",
      },
    }
  }
>
  <TreeSelect
    className="control"
    components={
      Object {
        "MenuContainer": [Function],
        "Tree": [Function],
        "ValueContainer": [Function],
      }
    }
    getNodeLabel={[Function]}
    getNodeValue={[Function]}
    getOptionLabel={[Function]}
    getOptionValue={[Function]}
    isDisabled={[Function]}
    isSelected={[Function]}
    loading={false}
    multiple={false}
    name=""
    onFetch={[Function]}
    onSelect={[Function]}
    options={Object {}}
    placeholder="Выберите значение"
    removable={false}
    showMore={false}
    value={
      Object {
        "code": "code",
        "title": "attribute",
      }
    }
    values={Array []}
  >
    <div
      className="select control"
    >
      <Component
        className="valueContainer"
        onClick={[Function]}
      >
        <div
          className="valueContainer"
        >
          <AttributeAggregationField
            attribute={
              Object {
                "code": "code",
                "title": "attribute",
              }
            }
            onSelect={[Function]}
            renderValue={[Function]}
            tip="Агрегация"
            usesNotApplicableAggregation={false}
            value="COUNT_CNT"
          >
            <MiniSelect
              className=""
              isDisabled={false}
              onSelect={[Function]}
              options={
                Array [
                  Object {
                    "label": "CNT",
                    "value": "COUNT_CNT",
                  },
                  Object {
                    "label": "%",
                    "value": "PERCENT",
                  },
                ]
              }
              renderValue={[Function]}
              showCaret={true}
              tip="Агрегация"
              value="COUNT_CNT"
            >
              <OutsideClickDetector
                onClickOutside={[Function]}
              >
                <div
                  className="select "
                >
                  <div
                    className="valueContainer attributeField"
                    onClick={[Function]}
                  >
                    <div
                      className="label"
                    >
                      CNT
                    </div>
                    <Icon
                      className=""
                      height={16}
                      name="CHEVRON"
                      title=""
                      viewBox="0 0 16 16"
                      width={16}
                    >
                      <svg
                        className="icon"
                        fill="currentColor"
                        height={16}
                        viewBox="0 0 16 16"
                        width={16}
                      >
                        <use
                          className="use"
                          xlinkHref="#CHEVRON"
                        />
                      </svg>
                    </Icon>
                  </div>
                </div>
              </OutsideClickDetector>
            </MiniSelect>
          </AttributeAggregationField>
          <div
            className="labelContainer"
            onClick={[Function]}
          >
            <div
              className="sourceLabel"
            >
              source
            </div>
            <div
              className="attributeLabel"
            >
              attribute
            </div>
          </div>
        </div>
      </Component>
    </div>
  </TreeSelect>
</SourceControl>
`;

exports[`AttributeCreatingModal SourceControl renders when property "value" is set to "null" 1`] = `
<SourceControl
  index={0}
  name="name"
  onClick={[Function]}
  onFetch={[Function]}
  onSelect={[Function]}
  options={Object {}}
  value={null}
>
  <TreeSelect
    className="control"
    components={
      Object {
        "MenuContainer": [Function],
        "Tree": [Function],
        "ValueContainer": [Function],
      }
    }
    getNodeLabel={[Function]}
    getNodeValue={[Function]}
    getOptionLabel={[Function]}
    getOptionValue={[Function]}
    isDisabled={[Function]}
    isSelected={[Function]}
    loading={false}
    multiple={false}
    name=""
    onFetch={[Function]}
    onSelect={[Function]}
    options={Object {}}
    placeholder="Выберите значение"
    removable={false}
    showMore={false}
    value={null}
    values={Array []}
  >
    <div
      className="select control"
    >
      <Component
        className="valueContainer"
        onClick={[Function]}
      >
        <div
          className="valueContainer"
        >
          <div
            className="placeholder"
            onClick={[Function]}
          >
            <Icon
              className=""
              height={16}
              name="ELLIPSIS"
              title=""
              viewBox="0 0 16 16"
              width={16}
            >
              <svg
                className="icon"
                fill="currentColor"
                height={16}
                viewBox="0 0 16 16"
                width={16}
              >
                <use
                  className="use"
                  xlinkHref="#ELLIPSIS"
                />
              </svg>
            </Icon>
          </div>
        </div>
      </Component>
    </div>
  </TreeSelect>
</SourceControl>
`;
